org: madelrio
app: translate-api
service: translate-api

provider:
  name: aws
  runtime: nodejs20.x
  iamRoleStatements:
    - Effect: Allow
      Action:
        - translate:TranslateText
      Resource: '*'
  environment:
    COGNITO_USER_POOL_ID: { Ref: CognitoUserPool }
    COGNITO_USER_POOL_CLIENT_ID: { Ref: CognitoUserPoolClient }
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - cognito-idp:AdminCreateUser
            - cognito-idp:AdminSetUserPassword
            - cognito-idp:AdminAddUserToGroup
          Resource: '*'

resources:
  Resources:
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:service}-pool-${sls:stage}
        Policies:
          PasswordPolicy:
            MinimumLength: 8
        UsernameAttributes:
          - email
        Schema:
          - AttributeDataType: String
            Name: email
            Required: false
    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:service}-client-${sls:stage}
        UserPoolId:
          Ref: CognitoUserPool
        GenerateSecret: false
        AccessTokenValidity: 5
        IdTokenValidity: 5
        ExplicitAuthFlows:
          - 'USER_PASSWORD_AUTH'

functions:
  getTranslate:
    handler: src/handlers/getTranslate.getTranslateHandler
    events:
      - httpApi:
          method: post
          path: /
  register:
    handler: src/handlers/register.registerHandler
    events:
      - httpApi:
          method: post
          path: /register

package:
  individually: true

build:
  esbuild:
    bundle: true
    minify: false
    external:
      - '@aws-sdk/client-s3'
    exclude:
      - '@aws-sdk/*'
    packages: external
    buildConcurrency: 3
    sourcemap:
      type: linked
      setNodeOptions: true

plugins:
  - serverless-offline
